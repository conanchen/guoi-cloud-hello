
# A hello represents a hello message.
type Hello implements Node {
  # Globally unique identifier.
  id: ID!

    # The person's first name
    first_name: String
    # The person's last name
    last_name: String

  # The hello message .
  message: String!

  # hello creation date time
  create_time: DateTime!

  # hello update date time
  update_time: DateTime!

}

type HelloConnection {
  # A list of edges.
  edges: [HelloEdge!]!

  # Information to aid in pagination.
  pageInfo: PageInfo!
}

type HelloEdge {
  # A cursor for use in pagination.
  cursor: String!

  # The item at the end of HelloEdge.
  node: Hello!
}



# 创建Hello输入参数
input HelloCreateInput{
    #Hello Person's first name
    first_name: String!

    #Hello Person's last name
    last_name: String!

}

input HelloUpdateInput{
    id: ID!
    message: String!
}


#创建Hello的回复
type HelloCreatePayload {
  # The hello object.
  hello: Hello

  # List of errors that occurred executing the mutation.
  userErrors: [UserError!]!
}

type HelloUpdatePayload {
  # The hello object.
  hello: Hello

  # List of errors that occurred executing the mutation.
  userErrors: [UserError!]!
}