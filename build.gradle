buildscript {
    apply from: "$rootDir/blessedDeps.gradle"
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


allprojects {
    apply plugin: 'java'

    group = 'guoi-hello'
    version = '0.0.1-SNAPSHOT'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    //编译JAVA文件时采用UTF-8
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('charSet', 'UTF-8')
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }



    test {
        testLogging {
            exceptionFormat = 'full'
        }
    }


    dependencies{
        compileOnly('org.projectlombok:lombok:1.16.20')
        testCompileOnly('org.projectlombok:lombok:1.16.20')
    }

}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

}

repositories {
    mavenCentral()
    maven { url "http://192.168.1.41:8081/nexus/content/repositories/central" }
    maven { url "http://192.168.1.41:8081/nexus/content/repositories/releases" }
    maven { url "http://192.168.1.41:8081/nexus/content/repositories/snapshots" }
}

configurations.all {
    //https://www.jianshu.com/p/870c9e3ee0c9
    //每隔10分钟..
//    resolutionStrategy.cacheChangingModulesFor 24*10, 'hours'
    resolutionStrategy.cacheChangingModulesFor 0, 'hours'
}

project.logger.lifecycle("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
project.logger.lifecycle("~~~~~~~~~~~~~~~~~ROOT BUILD DONE!~~~~~~~~~~~~~~~~~~");
project.logger.lifecycle("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");